import sys
import os
import telebot

sys.path.append(os.path.abspath('../KonspektBank'))

from telebot import types
from search_notes import create_keyboard
from KonspektBank import GeminiModule  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å
from KonspektBank.utils import try_search_files, create_description
from text import *
from Attachments import Photo, Document, Attachment


def callback_query(call: types.CallbackQuery, bot: telebot.TeleBot):
    subject = call.data
    subject_file_map = {
        "–ë–∏–æ–ª–æ–≥–∏—è üî¨": biology_replies,
        "–•–∏–º–∏—è üß™": chemistry_replies,
        "–§–∏–∑–∏–∫–∞ ‚öõÔ∏è": physics_replies,
        "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ ‚ûï": math_replies,
        "–ò—Å—Ç–æ—Ä–∏—è üìú": history_replies,
        "–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ üåç": foreign_language_replies,
        "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ üë•": social_studies_replies,
        "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è üó∫Ô∏è": geography_replies,
        "–≠–∫–æ–Ω–æ–º–∏–∫–∞": economics_replies,
        "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è": psychology_replies,
    }

    if call.data == 'find_konspekt':
        file_paths = try_search_files(subject.split(' ')[0])
        for file in file_paths:
            with open(file.file_path, "rb") as files:
                bot.send_document(call.message.chat.id, files, None,
                                  f"–û–ø–∏—Å–∞–Ω–∏–µ: {file.description["description"]}")
        if not file_paths:
            bot.send_message(call.message.chat.id, "–§–∞–π–ª–∞ –Ω–µ—Ç—É (")

    if call.data == 'find_sum':
        pass

    if call.data == "add_file":
        bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤—Ç–µ —Ñ–∞–π–ª:")
        attachment = HandleFile(bot, call)[0]
        with open(f"{attachment.name}", 'wb') as f:
            f.write(attachment.data)
        bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ:")
        process_description(bot, call, attachment)
        #—Ç–æ–≥–¥–∞ –∞–¥–∏–æ—Å
        #you too
        keyword_find_notes = types.ReplyKeyboardMarkup(resize_keyboard=True)

        row = []
        for subject in subjects:
            btn = types.KeyboardButton(subjects[subject])
            row.append(btn)
            if len(row) == 6:
                keyword_find_notes.add(*row)
                row = []

        if row:
            keyword_find_notes.add(*row)

        bot.send_message(call.message.chat.id, "–í—ã–±–∏—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º –ø—Ä–µ–¥–º–µ—Ç:",
                         reply_markup=keyword_find_notes)

    if call.data == 'exit':
        bot.delete_message(call.message.chat.id, call.message.message_id)


def HandleFile(bot: telebot.TeleBot, call: types.CallbackQuery) -> list[Attachment] | None:
    attachments = []
    if call.message.photo:
        photo = call.message.photo[-1]
        file = bot.get_file(photo.file_id)
        if file.file_size / 1024 / 1024 > 100:
            return
        downloaded_file = bot.download_file(file.file_path)
        attachments.append(Photo(downloaded_file, file.file_path))

    if call.message.document:
        document = call.message.document
        file = bot.get_file(document.file_id)
        if file.file_size / 1024 / 1024 > 100:
            return
        downloaded_file = bot.download_file(file.file_path)
        attachments.append(Document(downloaded_file, file.file_path))

    return attachments


def process_description(bot: telebot.TeleBot, call: types.CallbackQuery, attachment:Attachment):
    description = call.message.text
    create_description(f"Files\\{attachment.name}", description)
    bot.send_message(call.message.chat.id, "–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ")



